<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;block_Lambda_Expressions.BlockLambda2&apos; to &apos;BlockLambda2_StringPalindrome&apos;&#x0D;&#x0A;- Original project: &apos;Lambda Expression&apos;&#x0D;&#x0A;- Original element: &apos;block_Lambda_Expressions.BlockLambda2&apos;&#x0D;&#x0A;- Renamed element: &apos;block_Lambda_Expressions.BlockLambda2_StringPalindrome&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;BlockLambda2&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;block_Lambda_Expressions{BlockLambda2.java[BlockLambda2" matchStrategy="1" name="BlockLambda2_StringPalindrome" qualified="false" references="true" similarDeclarations="false" stamp="1662447819928" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;block_Lambda_Expressions.BlockLambda_Leap_Year_Check&apos; to &apos;Leap_Year_Check&apos;&#x0D;&#x0A;- Original project: &apos;Lambda Expression&apos;&#x0D;&#x0A;- Original element: &apos;block_Lambda_Expressions.BlockLambda_Leap_Year_Check&apos;&#x0D;&#x0A;- Renamed element: &apos;block_Lambda_Expressions.Leap_Year_Check&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;BlockLambda_Leap_Year_Check&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;block_Lambda_Expressions{BlockLambda_Leap_Year_Check.java[BlockLambda_Leap_Year_Check" matchStrategy="1" name="Leap_Year_Check" qualified="false" references="true" similarDeclarations="false" stamp="1662448187243" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;block_Lambda_Expressions.BlockLambda2_StringPalindrome&apos; to &apos;Check_String_Palindrome&apos;&#x0D;&#x0A;- Original project: &apos;Lambda Expression&apos;&#x0D;&#x0A;- Original element: &apos;block_Lambda_Expressions.BlockLambda2_StringPalindrome&apos;&#x0D;&#x0A;- Renamed element: &apos;block_Lambda_Expressions.Check_String_Palindrome&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;BlockLambda2_StringPalindrome&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;block_Lambda_Expressions{BlockLambda2_StringPalindrome.java[BlockLambda2_StringPalindrome" matchStrategy="1" name="Check_String_Palindrome" qualified="false" references="true" similarDeclarations="false" stamp="1662448215555" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;block_Lambda_Expressions.Check_String_Palindrome&apos; to &apos;Check_String_Palindrome2&apos;&#x0D;&#x0A;- Original project: &apos;Lambda Expression&apos;&#x0D;&#x0A;- Original element: &apos;block_Lambda_Expressions.Check_String_Palindrome&apos;&#x0D;&#x0A;- Renamed element: &apos;block_Lambda_Expressions.Check_String_Palindrome2&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Check_String_Palindrome&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;block_Lambda_Expressions{Check_String_Palindrome.java[Check_String_Palindrome" matchStrategy="1" name="Check_String_Palindrome2" qualified="false" references="true" similarDeclarations="false" stamp="1662448249316" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;block_Lambda_Expressions.Leap_Year_Check&apos; to &apos;Leap_Year_Check3&apos;&#x0D;&#x0A;- Original project: &apos;Lambda Expression&apos;&#x0D;&#x0A;- Original element: &apos;block_Lambda_Expressions.Leap_Year_Check&apos;&#x0D;&#x0A;- Renamed element: &apos;block_Lambda_Expressions.Leap_Year_Check3&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Leap_Year_Check&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;block_Lambda_Expressions{Leap_Year_Check.java[Leap_Year_Check" matchStrategy="1" name="Leap_Year_Check3" qualified="false" references="true" similarDeclarations="false" stamp="1662448259297" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;check_if_a_String_Contains_Only_Alphabets.StringContains&apos; to &apos;StringContains_OnlyAlphabets&apos;&#x0D;&#x0A;- Original project: &apos;Lambda Expression&apos;&#x0D;&#x0A;- Original element: &apos;check_if_a_String_Contains_Only_Alphabets.StringContains&apos;&#x0D;&#x0A;- Renamed element: &apos;check_if_a_String_Contains_Only_Alphabets.StringContains_OnlyAlphabets&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;StringContains&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;check_if_a_String_Contains_Only_Alphabets{StringContains.java[StringContains" matchStrategy="1" name="StringContains_OnlyAlphabets" qualified="false" references="true" similarDeclarations="false" stamp="1662450032802" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename package &apos;lambda_Expression_Variable_Capturing&apos; to &apos;variable_Capturing_Inside_Outside_ofBlock&apos;&#x0D;&#x0A;- Original project: &apos;Lambda Expression&apos;&#x0D;&#x0A;- Original element: &apos;Lambda Expression/src/lambda_Expression_Variable_Capturing&apos;&#x0D;&#x0A;- Renamed element: &apos;Lambda Expression/src/variable_Capturing_Inside_Outside_ofBlock&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;lambda_Expression_Variable_Capturing&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;lambda_Expression_Variable_Capturing" name="variable_Capturing_Inside_Outside_ofBlock" qualified="false" references="true" stamp="1662453293775" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;shorting_by_Ascending_Descending_UsingComparator.DescendingCity&apos; to &apos;Ascending_DescendingCities&apos;&#x0D;&#x0A;- Original project: &apos;Lambda Expression ===&apos;&#x0D;&#x0A;- Original element: &apos;shorting_by_Ascending_Descending_UsingComparator.DescendingCity&apos;&#x0D;&#x0A;- Renamed element: &apos;shorting_by_Ascending_Descending_UsingComparator.Ascending_DescendingCities&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;DescendingCity&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;shorting_by_Ascending_Descending_UsingComparator{DescendingCity.java[DescendingCity" matchStrategy="1" name="Ascending_DescendingCities" qualified="false" references="true" similarDeclarations="false" stamp="1662612631852" textual="false" version="1.0"/>
</session>