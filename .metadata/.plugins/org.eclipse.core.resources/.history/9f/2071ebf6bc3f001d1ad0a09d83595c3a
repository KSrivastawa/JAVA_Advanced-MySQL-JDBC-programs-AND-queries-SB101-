package com.ketan.dataBase.object;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.xml.crypto.Data;

import com.ketan.Utility.DataBaseUtility;
import com.ketan.bean.Vendor;

public class Vendor_DAO_Impl implements Vendor_DAO {

	@Override
	public String registerVendor(String aemail,String apassword,String name,int gst_no, String edate, String email, String password, int signature_id) {
		String status = "Not Inserted..";
		
		try(Connection conn = DataBaseUtility.provideTenderConnection()) {
			
			PreparedStatement ps1 = conn.prepareStatement("select * from administrator where email = ?");
			
			ps1.setString(1, aemail);
			
			ResultSet rs1 = ps1.executeQuery();
			
			if(rs1.next()) {
				
				PreparedStatement ps2 = conn.prepareStatement("select * from administrator where password = ?");
				
				ps2.setString(1, apassword);
				
				ResultSet rs2 = ps2.executeQuery();
				
				if(rs2.next()) {
					
					PreparedStatement ps3 = conn.prepareStatement("insert into vendor(vname,GST_no,edate,email,password,signature_id) values(?,?,?,?,?,?)");
					
					ps3.setString(1, name);
					ps3.setInt(2, gst_no);
					ps3.setString(3, edate);
					ps3.setNString(4, email);
					ps3.setString(5, password);
					ps3.setInt(6, signature_id);
					
					int x = ps3.executeUpdate();
					
					if(x>0)
						status = "Registered Successfully...";
					
				}else {
					System.out.println("Password Incorrect...");
				}
				
			}else {
				System.out.println("User does not exist..");
			}
			
			
		} catch (SQLException e) {
			status = e.getMessage();
		}
		
		
		
		
		
		return status;
	}

	@Override
	public String login(String username, String password) {
		
		String status = "Login failed...";
		
		try(Connection conn = DataBaseUtility.provideTenderConnection()) {
			
			PreparedStatement ps = conn.prepareStatement("Select password from administrator where email =? AND password = ?");
			
			ps.setString(1, username);
			ps.setString(2, password);
			
			ResultSet rs = ps.executeQuery();
			
			if(rs.next()) {
				
				status = "Login Successful...";
				
				
			}else {
				status = "Username and password mismatch...";
			}
			
			
		} catch (SQLException e) {
			status = e.getMessage();
		}
		
		
		return status;
	}

	@Override
	public String registerNewVendor(String name, int gst_no, String edate, String email, String password,
			int signature_id) {
		
		String status = "Not Inserted...";
		
		try(Connection conn = DataBaseUtility.provideTenderConnection()) {
			
			PreparedStatement ps = conn.prepareStatement("insert into vendor(vname,GST_no,edate,email,password,signature_id) values(?,?,?,?,?,?)");
			
			ps.setString(1, name);
			ps.setInt(2, gst_no);
			ps.setString(3, edate);
			ps.setNString(4, email);
			ps.setString(5, password);
			ps.setInt(6, signature_id);
			
			int x = ps.executeUpdate();
			
			if(x>0)
				status = "Registered Successfully...";

				
			
		} catch (SQLException e) {
			status = e.getMessage();
		}
		
		
		return status;
	}

	@Override
	public List<Vendor> viewAllVendorsDetails() {
		
		List<Vendor> list = null;
		
		try(Connection conn = DataBaseUtility.provideTenderConnection()) {
			
			PreparedStatement ps = conn.prepareStatement("Select * from vendor");
			
			ResultSet rs = ps.executeQuery();
			
			while(rs.next()) {
				
				int i = rs.getInt("id");
				String g = rs.getString("GST_no");
				String g = rs.getString("GST_no");
				String ed = rs.getString("edate");
				String e = rs.getString("email");
				String p = rs.getString("password");
				int si = rs.getInt("signature_id");
				
				Vendor vendor = new Vendor(i, g, i, ed, e, p, si)
				
			}
			
			
		} catch (SQLException e) {
			// TODO: handle exception
		}
		
		
		
		return list;
	}
	

}
