Q1: It's the end of 2016, and the owner of Cocoa Confections wants to write an SQL
query that finds the COUNT of orders placed in 2016 by customer e-mail address.
She wants to ORDER the results by the COUNT of orders placed in 2016,
descending, so that she can personally send thank-you e-mails to Cocoa
Confection's top customers by order volume.
Can you write a query that will help the owner of Cocoa Confections find the
COUNT of all orders placed in 2016, by customer e-mail address, sorted
Descending?

Sample Input:

Customers:
+-----------------+---------------+--------------+---------------------+------------+-------------+-------+----------
--+
| customer_id | first_name | last_name | email | address | city | state | zip_code |
+-----------------+---------------+--------------+--------------------+------------+-------------+-------+-----------
--+
| 1 | abc | a | abc@mail.com | 1st street | chennai | TN | 60001 |
| 2 | efg | e | efg@mail.com | 2nd street | Bangalore | KA| 50002 |
| 3 | ijk | i | ijk@mail.com | 3nd street | Mumbai | MH | 40002 |
+------------------+----------------+------------+--------------------+---------------+-----------+-------+----------
+
Orders:
+-----------+-----------------+--------------------------+
| order_id | customer_id | order_placed_date |
+-----------+-----------------+--------------------------+
| 1 | 1 | 2016-11-11 |
| 2 | 1 | 2016-10-01 |
| 3 | 2 | 2016-06-01 |
| 4 | 2 | 2015-06-01 |
| 5 | 1 | 2015-06-01 |
+----------+-------------+--------------------------------+
Sample OutPut:
+--------------------+-----------------+
| email | order_count |
+--------------------+-----------------+
| abc@mail.com | 2 |
| efg@mail.com | 1 |
+--------------------+-----------------+



Ans:

mysql> select customers.email, count(customers.email) order_count from customers inner join orders on customers.customer_id = orders.customer_id where orders.order_placed_date >= '2016-01-01' and orders.order_placed_date<= '2016-12-31' group by customers.email order by order_count desc;
+--------------+-------------+
| email        | order_count |
+--------------+-------------+
| abc@mail.com |           2 |
| efg@mail.com |           1 |
+--------------+-------------+
2 rows in set (0.00 sec)


Q2:
mysql> select * from worker;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> select * from bonus;
+---------------+--------------+---------------------+
| WORKER_REF_ID | BONUS_AMOUNT | BONUS_DATE          |
+---------------+--------------+---------------------+
|             1 |         5000 | 2016-02-20 00:00:00 |
|             2 |         3000 | 2016-06-11 00:00:00 |
|             3 |         4000 | 2016-02-20 00:00:00 |
|             1 |         4500 | 2016-02-20 00:00:00 |
|             2 |         3500 | 2016-06-11 00:00:00 |
+---------------+--------------+---------------------+
5 rows in set (0.00 sec)

mysql> select * from title;
+---------------+---------------+---------------------+
| WORKER_REF_ID | WORKER_TITLE  | AFFECTED_FROM       |
+---------------+---------------+---------------------+
|             1 | Manager       | 2016-02-20 00:00:00 |
|             2 | Executive     | 2016-06-11 00:00:00 |
|             8 | Executive     | 2016-06-11 00:00:00 |
|             5 | Manager       | 2016-06-11 00:00:00 |
|             4 | Asst. Manager | 2016-06-11 00:00:00 |
|             7 | Executive     | 2016-06-11 00:00:00 |
|             6 | Lead          | 2016-06-11 00:00:00 |
|             3 | Lead          | 2016-06-11 00:00:00 |
+---------------+---------------+---------------------+
8 rows in set (0.00 sec)

2)1-> Write an SQL query to show the second highest salary from a Worker table.

Ans:

mysql> select * from worker where salary = (select max(salary) from worker where salary < (select max(salary) from worker) );
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)


2)2-> Write an SQL query to determine the 5 highest salary from a Worker table.

Ans:

mysql> select * from worker order by salary desc limit 5;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)


2)3-> Write an SQL query to show only even rows from a Worker table.

Ans:

mysql> select * from worker where worker_id%2=0;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)


2)4-> Write an SQL query to fetch the no. of workers for each department in descending order
from the Worker table.

Ans:

mysql> select department, count(department) count from worker group by department order by count desc;
+------------+-------+
| department | count |
+------------+-------+
| Admin      |     4 |
| HR         |     2 |
| Account    |     2 |
+------------+-------+
3 rows in set (0.00 sec)

2)5-> Write an SQL query to fetch the list of employees with the same salary from the Worker
table.

Ans:

mysql> select worker_id first_name, last_name, salary, joining_date, department from worker where salary in (select salary from worker group by salary having count(*) > 1);
+------------+-----------+--------+---------------------+------------+
| first_name | last_name | salary | joining_date        | department |
+------------+-----------+--------+---------------------+------------+
|          4 | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|          5 | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)

---------------------------------

-> count the number of employees----

mysql> select salary, count(salary) num_of_employees from worker group by salary having num_of_employees>1;
+--------+------------------+
| salary | num_of_employees |
+--------+------------------+
| 500000 |             2    |
+--------+------------------+
1 row in set (0.00 sec)



------------------------------**************************------------------------





















