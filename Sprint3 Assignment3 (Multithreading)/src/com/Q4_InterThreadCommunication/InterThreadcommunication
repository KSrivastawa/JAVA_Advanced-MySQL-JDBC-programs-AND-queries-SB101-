
Q4/ Explain about thread synchronization(inter-thread communication).


Ans:

	Inter-thread Communication or Thread-synchronization:
	-----------------------------------------------------
	- It means two synchronized threads communicate each other.
	
	- Two synchronized thread can communicate each other by using some methods present in Object class, those
	  methods are wait(), notify(), notifyAll().
	  
	- By using above methods we can gain partial control on the scheduling mechanism which is supervised by the
	  thread-scheduler.
	  
	- To gain this partial control the threads should have a sign of mutual understanding between them .
	  they should be able to communicate with each other.
	  
	- Whenever we need to suspend a synchronized thread unconditionally then we use wait() method.
	
	- Whenever we need to resume a suspended(waiting) thread then we use notify() method.


	* In the inter-thread communication the thread which require updation it has to call wait() method.
	  The thread which performing updation it will call notify() method, so that waiting thread will gets the 
      notification and it continues its execution with those updation.
	
	
	Example:
	--------
		class MyThread extends Thread
		{
			int total=0;
			public void run(){
			for(int i=0;i<=100;i++){
			total=total+i;
			}
			}
			}
			class Main{
			public static void main(String[] args){
			MyThread mt=new MyThread();
			mt.start();
			System.out.println(mt.total);
			}
		}
	
	Here the main method of class Main is requires updation and here MyThread class run method performing
   updation
   Here if we run the above application normally then there may be a chance of:
	a. getting the total value
	b. getting the value as 0
	c. getting some partial value.
	because its up to the thread scheduler which thread is scheduled.
   
	Solution :
		class MyThread extends Thread{
			int num=0;
			
				@Override
				public void run() {
					synchronized (this) {
						System.out.println("child thread performing calculation");
						for(int i=0;i<=100;i++){
							num=num+i;
						}
						System.out.println("child thread giving the notification");
						this.notify();
					}
				}
			}
			class Test{
			
			public static void main(String[] args)throws Exception {
				MyThread mt=new MyThread();
				mt.start();
				
				synchronized (mt) { //getting the lock of mt object
					System.out.println("main thread calls the wait method");
					
					mt.wait();
					
					System.out.println("main thread got the notification");
					
					System.out.println(mt.num);
				}
			}
		}	
	
	